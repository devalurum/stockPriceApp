apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegram-stock-bot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegram-stock-bot
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: telegram-stock-bot
    spec:
      containers:
        - image: devalurum/telegram-stock-bot:latest
          name: telegram-stock-bot
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: stock-app-config
          env:
            - name: DATABASE_HOST
              value: postgres
            - name: KAFKA_HOST
              value: kafka-service
            - name: spring.jpa.hibernate.ddl-auto
              value: create # заменить на update после первого деплоя
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/readiness
              port: 8090
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8090
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
            initialDelaySeconds: 15