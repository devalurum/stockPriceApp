stages:
#  - docker-hub
  - kind-cluster
#  - deploy

#push-to-docker-hub:
#  stage: docker-hub
#  script:
#    # перед таском 'jib' вызывается build
#    # ToDo: разделить стейджи на build, test, push-to-docker-hub
#    - ./gradlew :stock-app-statistic:jib -PDOCKERHUB_USERNAME="$env:DOCKERHUB_USERNAME" -PDOCKERHUB_PASSWORD="$env:DOCKERHUB_PASSWORD"
#    - ./gradlew :telegram-stock-bot:jib -PDOCKERHUB_USERNAME="$env:DOCKERHUB_USERNAME" -PDOCKERHUB_PASSWORD="$env:DOCKERHUB_PASSWORD" -PTELEGRAM_TOKEN="$env:TELEGRAM_TOKEN"
#    - ./gradlew :telegram-stock-bot:jib -PDOCKERHUB_USERNAME="$env:DOCKERHUB_USERNAME" -PDOCKERHUB_PASSWORD="$env:DOCKERHUB_PASSWORD" -PTINKOFF_TOKEN="$env:TINKOFF_TOKEN"

create-kind-cluster:
  stage: kind-cluster
  script:
    - set message (kubectl cluster-info --context kind-kind 2>&1)
    - if((get-variable message -valueOnly) -like 'error*'){kind create cluster --config=kubernetes/kind-config.yaml}

# ToDo: возможно тут нужна какая-то логика на проверку изменений в конфигах,
# но для демонстрации пойдёт и такой вариант.
#deploy-in-kubernetes:
#  stage: deploy
#  script:
#    - cd kubernetes
#    # Импорт общей конфигураций
#    - kubectl apply -f config/stock-app-config.yaml
#    # Деплой kafka + zookeeper
#    - kubectl apply -f kafka/zookeeper.yaml
#    - kubectl apply -f kafka/kafka.yaml
#    # Деплой PostgreSQL + PostGIS
#    - kubectl apply -f db/postgres-config.yaml
#    - kubectl apply -f db/storage_postgres.yaml
#    - kubectl apply -f db/postgres.yaml
#    # Деплой микросервиса с подсчётом статистики
#    - kubectl apply -f stock-app-statistic/service_stock-app-stat.yaml
#    - kubectl apply -f stock-app-statistic/deploy_stock-app-stat.yaml
#    # Деплой микросервиса с телеграм-ботом
#    - kubectl apply -f telegram-stock-bot/service_telegram-stock-bot.yaml
#    - kubectl apply -f telegram-stock-bot/deploy_telegram-stock-bot.yaml
#    # Деплой микросервиса с tinkoff API
#    - kubectl apply -f tinkoff-stock-app/service_tinkoff-stock-app.yaml
#    - kubectl apply -f tinkoff-stock-app/ingress_tinkoff-stock-app.yaml
#    - kubectl apply -f tinkoff-stock-app/deploy_tinkoff-stock-app.yaml